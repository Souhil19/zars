#!/bin/env sh
#---------------------------------------------------#
# I use a bare git directory to store my dotfiles
#
#---------------------------------------------------#
#TODO: make the GIT_DIR hidden and on ~/.config
source ./misc.sh

name='zakaria'

clone_repo(){
read -p "Enter GIT repo: " GIT_DIR
#TODO: solve the problem of exiting when git is'nt installed
pacman -Q git &>/dev/null && echo $?
if [ "$?" -ne 0 ];then
	_error "git not found on your system\n"
	_info "installing..." \
		&& sudo pacman --noconfirm -S git &> /dev/null && _done
fi
read -p "Enter local repo's name: " DOT_DIR
if [ ! -d "${DOT_DIR}" ];then
	git clone --bare "${GIT_DIR}" "/home/${name}/${DOT_DIR}" 
else
	_error "Repo exist or there's a folder with the same name\n"
	#read -p "[d]elete old folder,choose [a]nother name, [s]kip, [c]ancel:" choise
	read -p "[d]elete, [n]ew, [s]kip, [c]ancel:" choise
	case $choise in
		d) rm -rf ${DOT_DIR} \
			&& git clone --bare "${GIT_DIR}" "/home/${name}/${DOT_DIR}" ;;
		n) read -p "Enter local repo's name: " DOT_DIR \
			&& git clone --bare "${GIT_DIR}" "/home/${name}/${DOT_DIR}" ;;
		s) echo "Skipped...";;
		c) exit 1;;
		
	esac
fi


}
main(){

mkdir -p "/home/${name}/.config/git/" \
clone_repo
_info "installing config files..."
/usr/bin/git --git-dir=$HOME/${DOT_DIR}/ --work-tree=$HOME checkout -f  && _done
# install aliases and ignore the the DIR_GIT
echo "#Generated by zars" >> /home/${name}/.config/misc/aliases
echo -e "alias config='/usr/bin/git --git-dir=/home/${name}/${DOT_DIR}/ --work-tree=/home/${name}'" >> /home/${name}/.config/misc/aliases
echo -e "# Generated by zars " >> /home/${name}/.config/git/ignore
echo -e "/home/${name}/${DOT_DIR}" >> /home/${name}/.config/git/ignore

}
main
